<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="git">
	<select id="findList" parameterType="string" resultType="gitvo">
		<![CDATA[
		select a.no,a.user_no as userNo,a.group_no as groupNo,
			   a.description, a.visible,a.git_name as gitName,
			    DATE_FORMAT(a.reg_date,'%Y-%m-%d %H:%i') as regDate
		from git a, user b 
		where a.user_no = b.no
		and b.id = #{id} and a.group_no is NULL
		order by reg_date desc;
		]]>
	</select>
	
	<select id="getGitItem" parameterType="map" resultType="gitvo">
		<![CDATA[
		select a.no, a.user_no as userNo , a.group_no as groupNo, 
			   a.description, a.visible, a.git_name as gitName, 
		      DATE_FORMAT(a.reg_date,'%Y-%m-%d %H:%i') as regDate
		from git a, user b  
		where a.user_no = b.no 
		and a.git_name=#{repoName} 
		and b.id=#{id}
		]]>
	</select>
	
	

	<insert id="insertGit" parameterType="gitvo">
		<![CDATA[
			insert into git 
			values(null,#{userNo},#{groupNo},#{description},#{visible},#{gitName},now())
		]]>
	</insert>
	
	<delete id="deleteRepository" parameterType="gitvo">
		<![CDATA[
			delete from git where no=#{no} 
		]]>
	</delete>
	

	<update id="updateVisible" parameterType="gitvo">
		<choose>
			<when test=' visible=="public" '>
		<![CDATA[
			update  
			git set visible='private' 
			where no=#{no};	
		]]>
			</when>
			<otherwise>
		<![CDATA[
			update  git 
			set visible='public'
			where no=#{no};	
		]]>
			</otherwise>
		</choose>
	</update>
	
	<select id="findUserNo" parameterType="map" resultType="long">
		<![CDATA[
			select no from user where id = #{id}
		]]>
	</select>
	
	<insert id="insertAlarm" parameterType="map">
		<![CDATA[
			insert into alarm values(null, #{userNo}, "commit", #{contents}, 'uncheck', now())
		]]>
	</insert>
	
	<insert id="insertSchedule" parameterType="map">
		<![CDATA[
			insert into schedule values(null, #{commitDate}, #{contents_short}, 'commit', #{userNo}, (select group_no from git where user_no = #{userNo} and git_name = #{repoName}))
		]]>
	</insert>
	
	<insert id="insertTimeline" parameterType="map">
		<![CDATA[
			insert into timeline values(null, #{contents}, now(), 'public', (select group_no from git where user_no = #{userNo} and git_name = #{repoName}), #{userNo})
		]]>
	</insert>
	
	<select id="findListGroup" parameterType="map" resultType="gitvo">
		<![CDATA[
		select a.no,a.user_no as userNo,a.group_no as groupNo,
			   a.description, a.visible,a.git_name as gitName,
				DATE_FORMAT(a.reg_date,'%Y-%m-%d %H:%i') as regDate, b.id as userId
		from git a join user b on a.user_no = b.no
		where a.group_no = #{groupNo} and 
			a.no not in(select no
						  from git
						where user_no != #{userNo} and visible="private"
						)
		]]>
	</select>
	
	<select id="findMyList" parameterType="string" resultType="gitvo">
		<![CDATA[
		select a.no,a.user_no as userNo,a.group_no as groupNo,
			   a.description, a.visible,a.git_name as gitName,
			    DATE_FORMAT(a.reg_date,'%Y-%m-%d %H:%i') as regDate
		from git a, user b 
		where a.user_no = b.no
		and b.id = #{id}
		order by reg_date desc;
		]]>
	</select>

</mapper>
